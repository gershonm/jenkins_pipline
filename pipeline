pipeline {
    agent any
    environment {
        DOCKER_HUB_CREDENTIALS = credentials('csi_w3_user') /* Jenkins credentials type of usernamePassword of docker hub */
        K8S_DEPLOYMENT_PATH = "/home/kubadmin/deploy.yaml"
        K8S_SSH_HOST = "9.151.213.35"
        K8S_SSH_USERNAME = "kubadmin"
        K8S_SSH_PRIVATE_KEY = credentials('k8s-ssh-key')
        OUTPUT_FILE = 'deploy-python-app.txt'
    }
    parameters {
        string(name: 'DOCKER_FILE', defaultValue: "docker_file")
        string(name: 'DOCKER_IMAGE', defaultValue: "gershon/gershon-app")
        string(name: 'DOCKER_REGISTRY', defaultValue: "stg-artifactory.xiv.ibm.com:5030", description: "the nexus registry  ")

    }
    options {
        timestamps()
        ansiColor('xterm')
    }
    stages {
        stage('Git Checkout gershon code'){
            steps {
	            git branch: 'master', url: 'https://github.com/gershonm/jenkins_pipline.git'
	            echo 'Git checkout completed'
	        }
	    }
        stage('Build Docker image') {
            steps {
                script {
                    sh 'docker build -f ${DOCKER_FILE} -t ${DOCKER_IMAGE} .'
                    sh 'docker tag  ${DOCKER_IMAGE} ${DOCKER_REGISTRY}/${DOCKER_IMAGE}'
                }
                echo 'Build image Completed'
            }
        }
        stage('Push Docker image') {
            steps {
                script {
                        sh 'echo $DOCKER_HUB_CREDENTIALS_PSW |docker login -u $DOCKER_HUB_CREDENTIALS_USR --password-stdin ${DOCKER_REGISTRY}'
                        //sh 'docker login -u $DOCKER_HUB_CREDENTIALS_USR -p $DOCKER_HUB_CREDENTIALS_PSW ${DOCKER_REGISTRY}'
                        sh 'docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE}'
                    echo 'Push Docker image Completed'
                }
            }
        }
         stage('Deploy to Kubernetes') {
            steps {
                script {
                    sshagent(['${env.K8S_SSH_PRIVATE_KEY}']) {
                        sh "scp -o StrictHostKeyChecking=no ${env.K8S_DEPLOYMENT_PATH} ${env.K8S_SSH_USERNAME}@${env.K8S_SSH_HOST}:${env.K8S_DEPLOYMENT_PATH}"
                        sh "ssh -o StrictHostKeyChecking=no ${env.K8S_SSH_USERNAME}@${env.K8S_SSH_HOST} 'kubectl apply -f ${env.K8S_DEPLOYMENT_PATH}'"
                    }
                }
            }
        }
    }

    post {
        always {
            sh 'docker logout ${DOCKER_REGISTRY}'
        }
        success {
            script {
                echo "finished successfully"
                if (fileExists("report/${OUTPUT_FILE}")) {
                    archiveArtifacts "report/${OUTPUT_FILE}"
                }
            }
        }
    }
}

